@model PIMSuite.Persistence.Entities.User
@{
    ViewBag.Title = "Profil bearbeiten";
    ViewBag.UserDetail = "Benutzerdaten";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}
<link href="~/Content/custom.css" rel="stylesheet" />
<link href="~/Content/login.css" rel="stylesheet" />

<div class="profile">
    <div class="clearfix"></div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">

                </div>
                <div class="clearfix"></div>
                <div class="x_content">
                    <div class="col-md-3 col-sm-3 col-xs-12">
                        <img class="img-responsive avatar-view" src="~/Content/images/no_propic.png">
                        <h2>@Html.DisplayFor(m => m.Lastname), @Html.DisplayFor(m => m.Firstname)</h2>
                    </div>
                    <div class="col-md-9 col-sm-9 col-xs-12">
                        <div class="profile_title">
                            <div class="col-md-6">
                                <h2>@ViewBag.UserDetail</h2>
                            </div>
                        </div>
                        <div>
                            @using (Html.BeginForm("Edit", "Profile", FormMethod.Post, new { @class = "form-signin" }))
                            {
                                @Html.ViewBag.Message
                                <span id="reauth-email" class="reauth-email"></span>

                                    <div class="form-group flex">
                                        @Html.LabelFor(model => model.Firstname, new { @class = "col-sm-2 control-label" })
                                        @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control col-sm-10", placeholder = Html.DisplayNameFor(model => model.Firstname) } })
                                        @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group flex">
                                        @Html.LabelFor(model => model.Lastname, new { @class = "col-sm-2 control-label" })
                                        @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control col-sm-10", placeholder = Html.DisplayNameFor(model => model.Lastname) } })
                                        @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group flex">
                                        @Html.LabelFor(model => model.Username, new { @class = "col-sm-2 control-label" })
                                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control col-sm-10", placeholder = Html.DisplayNameFor(model => model.Username) } })
                                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group flex">
                                        @Html.LabelFor(model => model.Email, new { @class = "col-sm-2 control-label" })
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control col-sm-10", placeholder = Html.DisplayNameFor(model => model.Email) } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group flex">
                                        @Html.LabelFor(model => model.DepartmentName, new { @class = "col-sm-2 control-label" })
                                        @Html.DropDownListFor(model => model.DepartmentName, (IEnumerable<SelectListItem>)ViewBag.Departments, "Abteilung wählen", new { @class = "form-control col-sm-10" })
                                        @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group flex">
                                        @Html.LabelFor(model => model.PhoneNumber, new { @class = "col-sm-2 control-label" })
                                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control col-sm-10", placeholder = Html.DisplayNameFor(model => model.PhoneNumber) } })
                                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group flex">
                                        @Html.LabelFor(model => model.LocationName, new { @class = "col-sm-2 control-label" })
                                        @Html.DropDownListFor(model => model.LocationName, (IEnumerable<SelectListItem>)ViewBag.Locations, "Standort wählen", new { @class = "form-control col-sm-10" })
                                        @Html.ValidationMessageFor(model => model.LocationName, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group flex">
                                        @Html.LabelFor(model => model.Projects, new { @class = "col-sm-2 control-label" })
                                        @Html.EditorFor(model => model.Projects, new { htmlAttributes = new { @class = "form-control col-sm-10", placeholder = Html.DisplayNameFor(model => model.Projects) } })
                                    </div>

                                    <div class="form-group flex">
                                        @Html.LabelFor(model => model.Password, new { @class = "col-sm-2 control-label" })
                                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control col-sm-10", placeholder = Html.DisplayNameFor(model => model.Password)}, @Value = "" })
                                    </div>
                                    <br />
                                    <button class="btn btn-lg btn-primary btn-block btn-signin" type="submit">Profil speichern</button>
                                    }

                                    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>