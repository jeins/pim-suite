@model PIMSuite.Persistence.Entities.User

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_LandingPageLayout.cshtml";
}

<link href="~/Content/login.css" rel="stylesheet" />

<div class="container">
    <div class="card card-container">
        <img id="profile-img" class="profile-img-card" src="//ssl.gstatic.com/accounts/ui/avatar_2x.png" />
        <p id="profile-name" class="profile-name-card"></p>
        @using (Html.BeginForm("Registration", "Registration", FormMethod.Post, new { @class = "form-signin" }))
        {
            @Html.ViewBag.Message
            @Html.AntiForgeryToken()
            <span id="reauth-email" class="reauth-email"></span>
            @*<input type="email" id="inputEmail" data-bind="textInput: emailAddress" class="form-control" placeholder="E-Mail-Adresse" required autofocus>
            <input type="password" id="inputPassword" data-bind="textInput: password" class="form-control" placeholder="Passwort" required>*@
            @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Firstname) } })
            @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })

            @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Lastname) } })
            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })

            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Username) } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })

            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Email) } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

            @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.DepartmentName) } })
            @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })

            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.PhoneNumber) } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })

            @Html.EditorFor(model => model.LocationName, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.LocationName) } })
            @Html.ValidationMessageFor(model => model.LocationName, "", new { @class = "text-danger" })

            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Password) } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            <br />
            <button class="btn btn-lg btn-primary btn-block btn-signin" type="submit">Registrieren</button>
        }     
    </div>
</div>

@*<h2>Registration</h2>

@using (Html.BeginForm()) 
{
    @Html.ViewBag.Message
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
     
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartamentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DepartamentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DepartamentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LocationName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="registrieren" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@

@*<div>
    @Html.ActionLink("zu den registrierten Nutzern", "Index")
</div>*@
